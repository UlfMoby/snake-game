name: multi-platform-build

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r requirements.txt
          python -m pip install pyinstaller

      - name: Build (windowed folder)
        run: |
          pyinstaller --noconfirm --windowed --name SnakeGame snake_game.py

      - name: Build (onefile)
        run: |
          pyinstaller --noconfirm --onefile --name SnakeGame snake_game.py

      - name: Linux fixup (preserve onefile and rebuild folder)
        if: runner.os == 'Linux'
        run: |
          # Preserve the onefile binary before rebuilding the windowed folder
          if [ -f "dist/SnakeGame" ]; then
            mv dist/SnakeGame dist/SnakeGame.bin
          fi
          # Rebuild the windowed folder so both artifacts exist
          pyinstaller --noconfirm --windowed --name SnakeGame snake_game.py

      - name: Package artifacts (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Remove-Item -Recurse -Force SnakeGame-windows* -ErrorAction SilentlyContinue
          Compress-Archive -Path dist/SnakeGame/* -DestinationPath SnakeGame-windows-folder.zip
          Compress-Archive -Path dist/SnakeGame.exe -DestinationPath SnakeGame-windows-exe.zip

      - name: Package artifacts (macOS)
        if: runner.os == 'macOS'
        run: |
          rm -f SnakeGame-macos* || true
          if [ -d "dist/SnakeGame.app" ]; then
            /usr/bin/zip -r SnakeGame-macos-app.zip dist/SnakeGame.app
          fi
          if [ -f "dist/SnakeGame" ]; then
            /usr/bin/zip -j SnakeGame-macos-bin.zip dist/SnakeGame
          fi

      - name: Package artifacts (Linux)
        if: runner.os == 'Linux'
        run: |
          rm -f SnakeGame-linux* || true
          if [ -d "dist/SnakeGame" ]; then
            /usr/bin/zip -r SnakeGame-linux-folder.zip dist/SnakeGame
          fi
          if [ -f "dist/SnakeGame.bin" ]; then
            /usr/bin/zip -j SnakeGame-linux-bin.zip dist/SnakeGame.bin
          fi

      - name: Upload artifacts (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: SnakeGame-windows
          path: |
            SnakeGame-windows-folder.zip
            SnakeGame-windows-exe.zip

      - name: Upload artifacts (macOS)
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: SnakeGame-macos
          path: |
            SnakeGame-macos-app.zip
            SnakeGame-macos-bin.zip

      - name: Upload artifacts (Linux)
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: SnakeGame-linux
          path: |
            SnakeGame-linux-folder.zip
            SnakeGame-linux-bin.zip

